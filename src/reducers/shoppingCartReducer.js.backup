import { ADD_TO_CART, CANCEL_CART, REMOVE_FROM_CART } from "../actions/types";
import { message } from "antd";

const shoppingCartReducer = (state = [], action) => {
  switch (action.type) {
    case ADD_TO_CART:
      let owner = state.some(x => {
        return x.storeName === action.product.owner.name;
      });

      if (!owner) {
        message.success(`Uspešno ste dodali '${action.product.name}' u korpu!`);
        return [
          ...state,
          { storeName: action.product.owner.name, products: [action.product] }
        ];
      }

      ///DA LI PROIZVOD VEC POSTOJI U KORPI
      let exist = state.findIndex(x => {
        return x.products.some(y => {
          return y.name === action.product.name;
        });
      });

      let index = state.findIndex(
        x => x.storeName === action.product.owner.name
      );

      if (exist > -1) {
        message.warning(`'${action.product.name}' je već u korpi!`);
        return state;
      } else {
        let array = state;
        let oldObject = state[index];
        let newObject = {
          storeName: action.product.owner.name,
          products: [...oldObject.products, action.product]
        };

        array[index] = newObject;
        ///FEEDBACK MESSAGE(ANT-DESIGN)
        message.success(`Uspešno ste dodali '${action.product.name}' u korpu!`);
        return array;
      }
    case REMOVE_FROM_CART:
      ///PRONACI INDEXE
      let store = state.findIndex(x => x.storeName === action.storeName);
      let item = state[store].products.findIndex(x => x._id === action.id);
      let newArray = [...state];
      newArray[store].products.splice(item, 1);

      ///AKO NEMA PROIZVODA IZ PRODAVNICE IZBRISATI JE
      if (newArray[store].products.length < 1) {
        newArray.splice(store, 1);
      }
      message.success("Uspesno ste izbacili proizvod iz korpe!");
      return newArray;
    case CANCEL_CART:
      return {};
    default:
      return state;
  }
};

export default shoppingCartReducer;
